import { useRouter } from 'next/router'
import { useState, useEffect } from 'react'
import { supabase } from '../../lib/supabase'
import ModuleViewer from '../../components/ModuleViewer'
import Quiz from '../../components/Quiz'
import { moduleData } from '../../lib/moduleData'

export default function ModulePage() {
  const router = useRouter()
  const { id } = router.query
  const [session, setSession] = useState(null)
  const [userPaid, setUserPaid] = useState(false)
  const [activeTab, setActiveTab] = useState('content')
  const [loading, setLoading] = useState(true)

  const moduleInfo = moduleData.find(m => m.id === parseInt(id))

  useEffect(() => {
    checkAccess()
  }, [id])

  async function checkAccess() {
    const { data: { session } } = await supabase.auth.getSession()
    setSession(session)
    
    if (!session) {
      router.push('/login')
      return
    }

    const { data, error } = await supabase
      .from('users')
      .select('has_paid')
      .eq('id', session.user.id)
      .single()
    
    if (!error && data?.has_paid) {
      setUserPaid(true)
    } else {
      router.push('/courses')
      return
    }
    
    setLoading(false)
  }

  if (loading || !moduleInfo) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-[#10151c] via-[#1a2230] to-[#232a39] flex items-center justify-center">
        <div className="text-white text-xl">Loading...</div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#10151c] via-[#1a2230] to-[#232a39] py-6 px-4">
      <div className="max-w-6xl mx-auto">
        {/* Module Header */}
        <div className="mb-8">
          <div className="flex items-center text-blue-400 mb-4">
            <button 
              onClick={() => router.push('/courses')}
              className="hover:text-blue-300 transition-colors"
            >
              ‚Üê Back to Courses
            </button>
          </div>
          <h1 className="text-4xl font-bold text-white mb-4">
            Module {id}: {moduleInfo.title}
          </h1>
          <p className="text-xl text-blue-200 mb-6">
            {moduleInfo.description}
          </p>
          
          {/* Module Stats */}
          <div className="flex flex-wrap gap-6 text-blue-200">
            <div className="flex items-center">
              <span className="text-xl mr-2">‚è±Ô∏è</span>
              <span>{moduleInfo.duration}</span>
            </div>
            <div className="flex items-center">
              <span className="text-xl mr-2">üí∞</span>
              <span>{moduleInfo.earnings}</span>
            </div>
            <div className="flex items-center">
              <span className="text-xl mr-2">üõ†Ô∏è</span>
              <span>{moduleInfo.tools.join(', ')}</span>
            </div>
          </div>
        </div>

        {/* Tabs */}
        <div className="mb-6">
          <div className="flex space-x-1 bg-[#181e29] p-1 rounded-lg">
            {[
              { id: 'content', label: 'üì∫ Content', icon: 'üì∫' },
              { id: 'quiz', label: '‚ùì Quiz', icon: '‚ùì' },
              { id: 'resources', label: 'üìö Resources', icon: 'üìö' }
            ].map(tab => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`flex-1 py-3 px-4 rounded-md font-semibold transition-all ${
                  activeTab === tab.id
                    ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white'
                    : 'text-blue-300 hover:text-white hover:bg-blue-900 hover:bg-opacity-30'
                }`}
              >
                {tab.label}
              </button>
            ))}
          </div>
        </div>

        {/* Tab Content */}
        <div className="bg-[#181e29] rounded-xl overflow-hidden">
          {activeTab === 'content' && (
            <ModuleViewer moduleId={parseInt(id)} />
          )}
          
          {activeTab === 'quiz' && (
            <div className="p-6">
              <Quiz moduleId={parseInt(id)} />
            </div>
          )}
          
          {activeTab === 'resources' && (
            <div className="p-6">
              <h3 className="text-2xl font-bold text-white mb-6">Resources & Tools</h3>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {moduleInfo.tools.map((tool, idx) => (
                  <div key={idx} className="bg-blue-900 bg-opacity-30 p-4 rounded-lg">
                    <h4 className="text-lg font-semibold text-blue-300 mb-2">{tool}</h4>
                    <p className="text-blue-200">Professional AI tool for enhanced productivity</p>
                  </div>
                ))}
              </div>
              
              <div className="mt-8">
                <h4 className="text-xl font-bold text-white mb-4">Key Takeaways</h4>
                <ul className="space-y-2">
                  {moduleInfo.keyPoints.map((point, idx) => (
                    <li key={idx} className="text-blue-200 flex items-start">
                      <span className="text-green-400 mr-2">‚úì</span>
                      <span>{point}</span>
                    </li>
                  ))}
                </ul>
              </div>
            </div>
          )}
        </div>

        {/* Navigation */}
        <div className="flex justify-between mt-8">
          <button
            onClick={() => id > 1 && router.push(`/modules/${parseInt(id) - 1}`)}
            disabled={id <= 1}
            className={`px-6 py-3 rounded-lg font-semibold transition-all ${
              id <= 1 
                ? 'bg-gray-600 text-gray-400 cursor-not-allowed'
                : 'bg-blue-600 hover:bg-blue-700 text-white'
            }`}
          >
            ‚Üê Previous Module
          </button>
          
          <button
            onClick={() => id < 8 && router.push(`/modules/${parseInt(id) + 1}`)}
            disabled={id >= 8}
            className={`px-6 py-3 rounded-lg font-semibold transition-all ${
              id >= 8
                ? 'bg-gray-600 text-gray-400 cursor-not-allowed'
                : 'bg-purple-600 hover:bg-purple-700 text-white'
            }`}
          >
            Next Module ‚Üí
          </button>
        </div>
      </div>
    </div>
  )
}